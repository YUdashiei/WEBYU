一.数据的存储方式有哪些
 特定文件/内存/第三方云服务器/数据库服务器
 
二.什么是数据库
 数据库按照一定的形式组织存储数据，目的是为了便于操作数据——增删改查
 1.数据库发展历史
  网状数据库 -> 层次型数据库 -> 关系型数据库 -> 非关系型数据库(NoSQL)
 2.关系型数据库逻辑结构 
Server  -> Database -> Table  ->  Row  ->  Column
数据库服务器     数据库          数据表          行             列
 
三.MySQL
 Oracle：MySQL
 马丁：MariaDB
XAMPP
服务器套装：包含多款服务器，包含MySQL，Apache...
 1.mysql部署结构
  (1)服务器端
    负责存储/维护数据 —— 银行的数据库服务器
    c:/xampp/mysql/bin/mysqld.exe    启动文件
    占用3306端口
  (2)客户端
    负责连接数据库服务器，对数据进行增删改查 —— ATM机
    c:/xampp/mysql/bin/mysql.exe   客户端文件
 2.使用客户端连接服务器端
  mysql.exe  -h127.0.0.1  -P3306  -uroot  -p
  -h   host  要连接的服务器的域名/IP地址   127.0.0.1/localhost
  -P   port  端口
  -u   user  用户，root是管理员账户
  -p   password  密码，xampp下root的密码为空
  mysql  -uroot   简写形式
 3.常用管理命令
所有管理命令都是以英文的分号结束
  quit;   退出服务器的连接
  show  databases;   显示数据库服务器下所有的数据库
  use  数据库名称;   进入到指定的数据库
  show  tables;    显示当前数据库下所有的数据表
  desc  数据表名称;  描述数据表的表头都有哪些项
  
 四.SQL命令
 结构化查询语言，用于操作关系型数据库服务器，主要是对数据进行增删改查
 1.SQL命令执行方式
  (1)交互模式
   客户端输入一行，点击回车服务器执行一行，适用于临时性的查看数据
  (2)脚本模式
   客户端把要执行的命令写在一个脚本文件中，一次性的提交给服务器执行，适用于批量的操作数据
   在建立连接之前的窗口
     mysql  -uroot<拖拽要运行的文件    回车
  (3)SQL命令的语法规范
  一行命令可以跨越多行，以英文的分号作为结束
  SQL命令不区分大小写，习惯上关键字大写，非关键字小写
  假设某一条SQL命令出现错误，则此条命令往后所有的命令不再执行
  分为单行注释(#...)和多行注释(/*...*/)
 2.常用的SQL命令
  (1)丢弃数据库，如果存在
    drop  database  if  exists  数据库名称;
  (2)创建新的数据库
    create  database  数据库名称;
  (3)进入数据库
    use  数据库名称;
  (4)创建数据表
    create  table  数据表名称(
      列名称   存储类型,
      ...
    ); 
  (5)插入数据
   insert  into  数据表名称  values( ... );
  (6)查询数据
   select * from 数据表名称;
  (7)修改数据
  update  数据表名称  set  列名称=值, 列名称=值  where  条件;
  (8)删除数据
  delete  from  数据表名称  where  条件;
  
 五.计算机存储字符
 1.如何存储英文字符
  ASCII：对所有的英文字母及其符号进行了编码，总共有128个
  Latin-1：对欧洲字符进行编码，总共有256个，兼容ASCII
 2.如何存储中文字符
  GB2312：对常用的6000多汉字进行了编码，兼容ASCII
  GBK：对两万多汉字进行了编码，兼容GB2312
  Unicode：对世界上主流国家常用的语言进行了编码，具体分为三种存储方案，utf-8，utf-16，utf-32
 3.mysql中文乱码产生的原因
  mysql默认使用Latin-1编码
 4.解决mysql中文乱码
  脚本文件另存为utf8
  客户端连接服务器端使用的编码为utf8
  服务器端创建数据库存储字符的编码为utf8
   
 六.列类型
 在创建数据表的时候，指定的列所能存储的数据类型
 create  table  t1(
   列名称  列类型
 );
 1.数值型 —— 引号可以不加
  tinyint   微整型，占1字节，范围-128~127
  smallint   小整型，占2个字节，范围-32768~32767
  int   整型，占4个字节，范围-2147483648~2147483647
  bigint   大整型，占8个字节，范围
  float   单精度浮点型，占4个字节，存储的值越大精度越低
  double   双精度浮点型，占8个字节，存储的值越大精度越低
  decimal(M,D)    定点小数，小数点不会发生变化，M代表总的有效位数，D代表小数点后的有效位数
  boolean   布尔型，只有两个值，分别是true和false，代表真和假，用于存储只有两个值的数据；使用的时候自动转为tinyint
  true和false是关键字，使用的时候不能加引号
 2.日期时间型 —— 必须加引号
  date   日期型  '2021-12-25'
  time   时间型  '15:27:30'
  datetime   日期时间型  '2021-12-25 15:27:30'
 3.字符串型 —— 必须加引号
  varchar(M)   变长字符串，不会产生空间浪费，数据操作速度相对慢，M的最大值是65535，常用于存储变化长度的数据，例如：标题、内容、姓名...
  char(M)   定长字符串，可能产生空间浪费，数据操作速度相对快，M的最大值是255，常用于存储固定长度的数据，例如：手机号码，身份证号码...
  text(M)   大型变长字符串，M最大值是2G
  varchar(5)	char(5)
a	a\0	a\0\0\0\0
ab	ab\0	ab\0\0\0
一二三	一二三\0	一二三\0\0
浮点型
 123456.789e-1
 12345.6789
 1234.56789e1
 123.456789e2

 TB  GB  MB  KB  Byte   Bit(位)
         1024
  1Byte=8Bit
  10进制
  1    2   3    4    5  ....   8   9  10
  2进制
  1   10  11  100  101  ...
 选择合理的列类型
  create  table  t1(
    id  int,
    name  varchar(8),
    age  tinyint,
    birthday  date,
    salary  decimal(8,2),     #999999.99
    phone  char(11),
    detail  varchar(10000)
  );
  
 七.列约束
 mysql可以对插入的值进行验证，只有通过验证才允许插入，例如：编号不允许重复、性别只能是男女、成绩范围在0~100之间
 create  table  t1(
   列名称  列类型  列约束
 );
 1.主键约束 —— primary key
  声明了主键约束的列，不允许插入重复的值，一个表中只能有一个主键约束，通常加在编号列，会加快数据的查询速度
  null：空，表示一个暂时无法确定的值，例如：无法确定一个商品的价格、无法确定员工的姓名...
  是关键字，使用的时候不能加引号
  主键约束的列上不允许插入null
 2.非空约束 —— not null
  声明了非空约束的列，不允许插入nulll
 3.唯一约束 —— unique
  声明了唯一约束的列上不允许插入重复的值，允许插入null，甚至多个null
 4.默认值约束 —— default
  可以给列指定默认值，可以通过default关键字获取列的默认值
  insert  into  数据表名称  values( ... default  );
  给指定的列赋值，没有出现的列自动调用默认值
  insert  into  数据表名称(列1, 列2)  values(值, 值);
 5.检查约束 —— check
  也称为自定义的约束，用户可以自己指定约束条件
  create  table  student(
     score  tinyint  check(score>=0  and  score<=100)
  );
  mysql不支持检查约束，认为会极大影响数据插入速度
 6.外键约束
  确保两个表之间的关联
  声明了外键约束的列上插入的值，必须得在另一个表的主键列中出现过才允许插入
  外键约束允许插入null
  外键约束的列要和另一个表主键列，列类型要保持一致
  foreign key(外键列) references 另一个表(主键列)
 
 八.自增列
 auto_increment：自动增长，一旦设置了自增列，插入值的时候只需要赋值为null，就会获取最大值然后加1插入
 注意事项：
   自增列必须添加在主键列上
   允许手动赋值
 九.简单查询
  1.查询特定的列
  示例：查询出所有员工的编号和姓名
  select  eid,ename  from emp;
  2.查询所有的列
  select  eid,ename,sex,birthday,salary,deptId  from emp;
  select  *  from  emp;
  3.给列起别名
  示例：查询所有员工的编号和姓名，使用一个字母作为别名
  select  eid as a,ename as b  from emp;
  4.显示不同的记录
  示例：查询出员工都分布在哪些部门
  select  distinct deptId  from emp;
  5.查询时执行计算    
  示例：计算2+3+4*5.8+7.4*2.9
  select 2+3+4*5.8+7.4*2.9;
  6.查询结果排序
  示例：查询出所有的部门，结果按照编号升序排列
  select * from dept order by did asc;   #ascendant 升序的
  示例：查询出所有的部门，结果按照编号降序排列
  select * from dept order by did desc;
  7.条件查询
  示例：查询出编号为5的员工
  select * from emp where eid=5;
