一.逻辑运算符
  短路逻辑
   &&   如果第一个条件为false就不再执行第二个条件
   ||    如果第一个条件为true就不再执行第二个条件
  短路逻辑重点是查看第2个条件是否执行，无需关注整体结果是true还是false

二.位运算符(了解)
 模拟计算机底层运算，先把数据转为2进制然后进行运算，运算完再把结果转成10进制
 1    2   3    4    5    6     7
 1   10  11  100  101  110  111
 &   按位与，上下两位比较，都是1结果是1，否则是0
 |   按位或，上下两位比较，含有1结果是1，否则是0
 ^  按位异或，上下两位比较，不同是1，否则是0
 >>  按位右移，删除末尾的位数，每移动一位会在原来基础之上除以2再取整
 <<   按位左移，在末尾补0，每移动一位乘以2
 13>>1      2<<4
   1101        10
    110       100
     11      1000

三.赋值运算符
  =  +=  -=  *=  /=   %=...
  运算赋值：先执行运算，再执行赋值
 
四.三目运算符
 一目运算符：由一个运算符连接的一个操作数据或者表达式  ++  --  !
 二目运算符：由一个运算符连接的两个操作数据或者表达式  + - * / %...
 三目运算符：由两个运算符连接的三个操作数据或者表达式 
   条件表达式  ?  表达式1  :  表达式2
   如果条件表达式为true，执行表达式1
   如果条件表达式为false，执行表达式2
 
五.浏览器端的函数
 alert()  弹出警示框
 prompt()  弹出提示(输入)框，需要使用变量保存输入的值，类型是字符串型，点击取消结果是null

程序 = 数据 + 算法
程序的执行方式：顺序执行、选择执行、循环执行

六、流程控制
 1.if语句
  满30减15

if(条件表达式){
  语句块
}
  如果if后的语句块中只有一行代码，则大括号可以省略
  以下情况作为条件表达式隐式转换为false
     0  NaN  ''   undefined   null
 2.if-else语句
 
if(条件表达式){
  语句块1
}else{
  语句块2
}
 3.if-else嵌套
 
if(条件表达式1){
  语句块1
}else if(条件表达式n){
  语句块n
}else{
  语句块n+1  //以上所有的条件都是false
}
 4.switch-case
  是一种特殊的多项分支语句
switch(表达式){
  case  值1:  //判断表达式是否和值1相等
    语句块1
    break; //结束switch-case语句，不再执行后续代码
  case  值n:
    语句块n
    break;
  default:
    语句块n+1  //表达式和每个值比较都是不等
}
